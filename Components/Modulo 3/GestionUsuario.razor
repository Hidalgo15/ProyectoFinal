@page "/Administrativo/Añadir"
@page "/Administrativo/Editar/{UsuarioCedula}"
@layout LayoutMod3
@rendermode InteractiveServer
@inject ContextoDige Cd
@inject NavigationManager NavMan


<h2>@TituloPagina</h2>

<div class="container">
    <EditForm Model="nuevoUsuario" OnValidSubmit="GuardarUsuario">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group mb-3">
            <label for="Cedula">Cédula:</label>
            <InputText id="Cedula" class="form-control" @bind-Value="nuevoUsuario.Cedula" disabled="@EsEdicion" />
        </div>
        <div class="form-group mb-3">
            <label for="Clave">Clave:</label>
            <InputText id="Clave" type="password" class="form-control" @bind-Value="nuevoUsuario.Clave" />
        </div>

        <div class="form-group">
            <label for="tipo">Tipo de Usuario</label>
            <InputSelect id="tipo" class="form-control" @bind-Value="nuevoUsuario.Tipo">
                <option value="PersonalOficina">Personal de Oficina</option>
            </InputSelect>
        </div>

        <button class="btn btn-primary" type="submit">@BotonTexto</button>
        <button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </EditForm>
</div>

@code {
    private Usuario nuevoUsuario = new Usuario();
    private string TituloPagina = "Añadir Usuario";
    private string BotonTexto = "Guardar";

    private bool EsEdicion => !string.IsNullOrEmpty(UsuarioCedula);

    // Parámetro que captura la cédula del usuario en el caso de la edición
    [Parameter]
    public string UsuarioCedula { get; set; }

    protected override async Task OnInitializedAsync()
{
    var sesion = UsuarioSession.GetInstance();

    // Validar si hay un usuario en sesión
    if (sesion.UsuarioActual == null)
    {
        NavMan.NavigateTo("/Login");
        return;
    }

    // Verificar si el usuario tiene permisos para añadir/editar
    if (!sesion.EsTipoUsuario(TipoUsuario.Administrador))
    {
        NavMan.NavigateTo("/AccesoDenegado");
        return;
    }

    // Si estamos en modo edición, cargamos el usuario correspondiente
    if (EsEdicion)
    {
        TituloPagina = "Editar Usuario";
        BotonTexto = "Actualizar";
        nuevoUsuario = await Cd.Usuarios.FindAsync(UsuarioCedula);

        if (nuevoUsuario == null)
        {
            // Si no encontramos el usuario, redirigimos
            NavMan.NavigateTo("/Administrativo");
        }
    }
    else
    {
        // Si estamos en modo añadir, inicializamos un nuevo objeto
        nuevoUsuario = new Usuario();
    }
}

    private async Task GuardarUsuario()
    {
        // Verificamos si la cédula está vacía en el modo "Añadir"
        if (string.IsNullOrEmpty(nuevoUsuario.Cedula) && !EsEdicion)
        {
            // Si no se ha ingresado la cédula, no guardamos nada
            return;
        }

        // Si estamos en modo edición, actualizamos el usuario
        if (EsEdicion)
        {
            Cd.Usuarios.Update(nuevoUsuario);
        }
        else
        {
            // Añadimos el nuevo usuario
            Cd.Usuarios.Add(nuevoUsuario);
        }

        await Cd.SaveChangesAsync();
        NavMan.NavigateTo("/Administrativo");
    }

    private void Cancelar()
    {
        // Al presionar Cancelar, redirigimos sin hacer nada
        NavMan.NavigateTo("/Administrativo");
    }
}
